{"version":3,"sources":["BooksAPI.js","Book.js","MyBooks.js","Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","Book","book","shelf","this","props","onUpdateShelf","_this","react_default","a","createElement","className","style","imageLinks","background","concat","thumbnail","value","onChange","e","target","disabled","title","authors","Component","MyBooks","map","shelfs","index","key","books","filter","src_Book","id","Link","to","Search","state","query","updateQuery","setState","length","onSearchBook","_this2","onClick","onDelete","autoFocus","type","placeholder","event","results","err","App","fetch","then","res","json","data","_this3","method","Object","objectSpread","Content-Type","body","JSON","stringify","BooksAPI","bPrev","_this4","error","b","_this5","Route","exact","path","render","src_MyBooks","updateShelf","src_Search","searchBook","delete","React","ReactDOM","BrowserRouter","basename","process","src_App_0","document","getElementById"],"mappings":"8PACMA,EAAM,wCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,2BC6BJS,wLA9BCC,EAAMC,GAClBC,KAAKC,MAAMC,cAAcJ,EAAMC,oCAGxB,IAAAI,EAAAH,KACAF,EAAQE,KAAKC,MAAbH,KAEP,OACEM,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaC,MAAQV,EAAKW,WAAa,CAAEC,WAAU,OAAAC,OAAQb,EAAKW,WAAWG,UAAxB,MAAwC,CAACF,WAAa,UACxHN,EAAAC,EAAAC,cAAA,OAAKC,UAAS,sBAAAI,OAAwBb,EAAKC,QACzCK,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASM,MAAOf,EAAKC,MAAOe,SAAU,SAACC,GAAD,OAAOZ,EAAKD,cAAcJ,EAAMiB,EAAEC,OAAOH,SAC/FT,EAAAC,EAAAC,cAAA,UAAQO,MAAM,WAAWI,UAAQ,GAAjC,cACAb,EAAAC,EAAAC,cAAA,UAAQO,MAAM,oBAAd,qBACAT,EAAAC,EAAAC,cAAA,UAAQO,MAAM,cAAd,gBACAT,EAAAC,EAAAC,cAAA,UAAQO,MAAM,QAAd,QACAT,EAAAC,EAAAC,cAAA,UAAQO,MAAM,QAAd,WAIJT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcT,EAAKoB,OAClCd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBT,EAAKqB,kBA9B3BC,aC8CJC,mLAtCJ,IAAAlB,EAAAH,KAEDD,EAAQ,CAAC,mBAAoB,aAAc,QAEjD,OACEK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACfH,EAAAC,EAAAC,cAAA,WALiB,CAAC,oBAAqB,eAAgB,kBAMzCgB,IAAI,SAACC,EAAQC,GAAT,OACdpB,EAAAC,EAAAC,cAAA,OAAKmB,IAAKF,EAAOC,GAAQjB,UAAU,aACjCH,EAAAC,EAAAC,cAAA,MAAIC,UAAS,mBAAAI,OAAqBZ,EAAMyB,KAAWD,GACnDnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACbJ,EAAKF,MAAMyB,MACTC,OAAO,SAAA7B,GAAI,OAAIA,EAAKC,QAAUA,EAAMyB,KACpCF,IAAI,SAAAxB,GAAI,OACPM,EAAAC,EAAAC,cAACsB,EAAD,CACA9B,KAAMA,EACN2B,IAAK3B,EAAK+B,GACV3B,cAAiBC,EAAKF,MAAMC,wBAUxCE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEC,GAAG,WADL,wBAnCcX,aC+DPY,6MArDbC,MAAQ,CACNC,MAAO,MAGTC,YAAc,SAACD,GACb/B,EAAKiC,SAAS,CAAEF,SACd,WACM/B,EAAK8B,MAAMC,MAAMG,QAAU,GAC7BlC,EAAKF,MAAMqC,aAAanC,EAAK8B,MAAMC,kFAMlC,IAAAK,EAAAvC,KACP,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMU,QAASxC,KAAKC,MAAMwC,SAAUlC,UAAU,eAAewB,GAAG,KAAhE,SACA3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,SAAOoC,WAAS,EAChBC,KAAK,OACLC,YAAY,4BACZ/B,MAAOb,KAAKiC,MAAMC,MAClBpB,SAAU,SAAC+B,GAAD,OAAWN,EAAKJ,YAAYU,EAAM7B,OAAOH,YAKtDb,KAAKiC,MAAMC,OACV9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACXP,KAAKC,MAAM6C,QAAQT,QAAU,GAC5BrC,KAAKC,MAAM6C,QAAQxB,IAAI,SAAAxB,GAAI,OACzBM,EAAAC,EAAAC,cAACsB,EAAD,CACA9B,KAAMA,EACN2B,IAAK3B,EAAK+B,GACV3B,cAAiBqC,EAAKtC,MAAMC,kBAKd,SAAjBF,KAAKC,MAAM8C,KACV3C,EAAAC,EAAAC,cAAA,kCApDOc,aCkFN4B,6MA/Ebf,MAAQ,CACNP,MAAO,GACPoB,QAAQ,GACRC,IAAI,uFAGc,IAAAR,EAAAvC,KJKpBiD,MAAK,GAAAtC,OAAIxB,EAAJ,UAAiB,CAAEO,YACrBwD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAK3B,QINDwB,KAAK,SAACxB,GACtBa,EAAKH,SAAS,CAAEV,gDAIR5B,EAAMC,GAAO,IAAAuD,EAAAtD,MJGL,SAACF,EAAMC,GAAP,OACpBkD,MAAK,GAAAtC,OAAIxB,EAAJ,WAAAwB,OAAiBb,EAAK+B,IAAM,CAC/B0B,OAAQ,MACR7D,QAAQ8D,OAAAC,EAAA,EAAAD,CAAA,GACH9D,EADE,CAELgE,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAE9D,YACtBmD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UIVfU,CAAgBhE,EAAMC,GAAOmD,KAAK,WAChCpD,EAAKC,MAAQA,EACbuD,EAAKlB,SAAS,SAAAH,GAAK,MAAK,CACtBP,MAAOO,EAAMP,MAAMC,OAAO,SAAAoC,GAAK,OAAIA,EAAMlC,KAAO/B,EAAK+B,KAAIlB,OAAO,CAACb,4CAK9DoC,GAAO,IAAA8B,EAAAhE,MJIE,SAACkC,GAAD,OACpBe,MAAK,GAAAtC,OAAIxB,EAAJ,WAAkB,CACrBoE,OAAQ,OACR7D,QAAQ8D,OAAAC,EAAA,EAAAD,CAAA,GACH9D,EADE,CAELgE,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAE3B,YACtBgB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAK3B,SIZnBoC,CAAgB5B,GAAOgB,KAAK,SAACxB,GACP,gBAAhBA,EAAMuC,MACRD,EAAK5B,SAAS,CACZU,QAAS,GACTC,IAAI,SACIrB,EAAMuC,OACdvC,EAAMJ,IAAI,SAACxB,GACTA,EAAKC,MAAM,OACXiE,EAAK/B,MAAMP,MAAMC,OAAO,SAAAuC,GAAC,OAAIA,EAAErC,KAAO/B,EAAK+B,KAC1CP,IAAI,SAAA4C,GAAC,OAAIpE,EAAKC,MAAQmE,EAAEnE,QACzBiE,EAAK5B,SAAS,CAAEU,QAASpB,yCAOjC1B,KAAKoC,SAAS,CAAEU,QAAS,GAAIC,IAAK,sCAI3B,IAAAoB,EAAAnE,KACP,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAC5BnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,iCAEFF,EAAAC,EAAAC,cAACkE,EAAD,CACE9C,MAASyC,EAAKlC,MAAMP,MACpBxB,cAAiB,SAAC2B,EAAI9B,GACpBoE,EAAKM,YAAY5C,EAAI9B,UAK9BK,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAOE,KAAM,UAAUC,OAAQ,kBAC7BnE,EAAAC,EAAAC,cAACoE,EAAD,CACE5B,QAAWqB,EAAKlC,MAAMa,QACtBpB,MAASyC,EAAKlC,MAAMP,MACpBxB,cAAiB,SAAC2B,EAAI9B,GACpBoE,EAAKM,YAAY5C,EAAI9B,IAEvBuC,aAAgB,SAACJ,GACfiC,EAAKQ,WAAWzC,IAElBO,SAAY,WACV0B,EAAKS,UACP7B,IAAKoB,EAAKlC,MAAMc,iBAxEV8B,IAAMzD,2BCFxB0D,IAASP,OAAOnE,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAeC,SAAUC,0BAAwB7E,EAAAC,EAAAC,cAAC4E,EAAD,OAAyBC,SAASC,eAAe","file":"static/js/main.61cada25.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Book extends Component {\r\n\r\n  static propTypes = {\r\n    book: PropTypes.object.isRequired,\r\n    onUpdateShelf: PropTypes.func.isRequired\r\n  }\r\n\r\n  onUpdateShelf(book, shelf) {\r\n    this.props.onUpdateShelf(book, shelf)\r\n  }\r\n\r\n  render() {\r\n    const {book} = this.props;\r\n\r\n    return (\r\n      <li>\r\n      <div className=\"book\">\r\n        <div className=\"book-top\">\r\n          <div className=\"book-cover\" style={ book.imageLinks ? { background:`url(${book.imageLinks.thumbnail})`} : {background : 'grey'} }></div>\r\n          <div className={`book-shelf-changer ${book.shelf}`}>\r\n            <select className=\"select\" value={book.shelf} onChange={(e) => this.onUpdateShelf(book, e.target.value)}>\r\n              <option value=\"disabled\" disabled>Move to...</option>\r\n              <option value=\"currentlyReading\">Currently Reading</option>\r\n              <option value=\"wantToRead\">Want to Read</option>\r\n              <option value=\"read\">Read</option>\r\n              <option value=\"none\">None</option>\r\n            </select>\r\n          </div>\r\n          </div>\r\n          <div className=\"book-title\">{book.title}</div>\r\n          <div className=\"book-authors\">{book.authors}</div>\r\n        </div>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Book;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport Book from './Book'\r\n\r\nclass MyBooks extends Component {\r\n  static propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n    onUpdateShelf: PropTypes.func.isRequired,\r\n  }\r\n\r\n  render() {\r\n    const shelfNames = ['Currently reading', 'Want to read', 'Finished books'];\r\n    const shelf = ['currentlyReading', 'wantToRead', 'read'];\r\n\r\n    return (\r\n      <div className=\"list-books-content\">\r\n      <div>\r\n        {shelfNames.map((shelfs, index) => (\r\n          <div key={shelfs[index]} className=\"bookshelf\">\r\n            <h2 className={`bookshelf-title ${shelf[index]}`}>{shelfs}</h2>\r\n            <div className=\"bookshelf-books\">\r\n              <ol className=\"books-grid\">\r\n              {this.props.books\r\n                .filter(book => book.shelf === shelf[index])\r\n                .map(book => (\r\n                  <Book\r\n                  book={book}\r\n                  key={book.id}\r\n                  onUpdateShelf = {this.props.onUpdateShelf}\r\n                  />\r\n                ))\r\n              }\r\n              </ol>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"open-search\">\r\n        <Link\r\n          to='/search'\r\n        >Add Contact</Link>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MyBooks;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport Book from './Book'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nclass Search extends Component {\r\n\r\n  static propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n    onUpdateShelf: PropTypes.func.isRequired,\r\n    onSearchBook: PropTypes.func.isRequired,\r\n    onDelete:PropTypes.func.isRequired\r\n  }\r\n\r\n  state = {\r\n    query: [],\r\n  }\r\n\r\n  updateQuery = (query) => {\r\n    this.setState({ query },\r\n      () => {\r\n        if (this.state.query.length >= 1) {\r\n          this.props.onSearchBook(this.state.query);\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-books\">\r\n      <div className=\"search-books-bar\">\r\n        <Link onClick={this.props.onDelete} className='close-search' to='/'>Close</Link>\r\n        <div className=\"search-books-input-wrapper\">\r\n          <input autoFocus\r\n          type=\"text\"\r\n          placeholder=\"Search by title or author\"\r\n          value={this.state.query}\r\n          onChange={(event) => this.updateQuery(event.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {this.state.query  && (\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n            {this.props.results.length >= 1 && (\r\n              this.props.results.map(book => (\r\n                <Book\r\n                book={book}\r\n                key={book.id}\r\n                onUpdateShelf = {this.props.onUpdateShelf}\r\n                />\r\n              ))\r\n            )}\r\n\r\n            {this.props.err==='true'  && (\r\n              <li>No results</li>\r\n            )}\r\n          </ol>\r\n        </div>\r\n      )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport { Route } from 'react-router-dom'\nimport MyBooks from './MyBooks'\nimport Search from './Search'\n\n\nclass App extends React.Component {\n  state = {\n    books: [],\n    results:[],\n    err:[]\n  }\n\n  componentDidMount() {\n    BooksAPI.getAll().then((books) => {\n      this.setState({ books })\n    });\n  }\n\n  updateShelf(book, shelf) {\n      BooksAPI.update(book, shelf).then(() => {\n        book.shelf = shelf;\n        this.setState(state => ({\n          books: state.books.filter(bPrev => bPrev.id !== book.id).concat([book])\n        }))\n      })\n    }\n\n  searchBook(query) {\n    BooksAPI.search(query).then((books) => {\n      if (books.error === \"empty query\") {\n        this.setState({\n          results: [],\n          err:'true' });\n      } else if (!books.error) {\n          books.map((book) => {\n            book.shelf='none';\n            this.state.books.filter(b => b.id === book.id)\n            .map(b => book.shelf = b.shelf);\n            this.setState({ results: books})\n          })\n        }\n      })\n    }\n\n  delete() {\n    this.setState({ results: [], err: [] })\n  }\n\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Route exact path='/' render={() => (\n          <div className=\"list-books\">\n             <div className=\"list-books-title\">\n               <h1>ANNAs READING LIST</h1>\n             </div>\n             <MyBooks\n               books = {this.state.books}\n               onUpdateShelf = {(id, shelf) => {\n                 this.updateShelf(id, shelf);\n               }}\n             />\n          </div>\n        )}/>\n        <Route path ='/search' render={() => (\n          <Search\n            results = {this.state.results}\n            books = {this.state.books}\n            onUpdateShelf = {(id, shelf) => {\n              this.updateShelf(id, shelf)\n            }}\n            onSearchBook = {(query) => {\n              this.searchBook(query)\n            }}\n            onDelete = {() => {\n              this.delete()}}\n            err={this.state.err}\n          />\n        )}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}